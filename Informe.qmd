---
title: "Informe Consultoria"
author: "Luis Hernández y Juan Carvajal"
date: "`r Sys.Date()`"
format: pdf
editor: visual
---

```{r}
#| echo: false
#| message: false
#| warning: false


## Paquetes usados 
library(tidyverse)
library(readxl)
library(janitor)

require(magrittr)
require(ggplot2)
require(vcd)
require(corrplot)
require(RColorBrewer)

library(knitr)
library(kableExtra)

library(survival)
library(KMsurv)
library(survMisc)
library(survminer)
library(ggfortify)
library(flexsurv)
library(actuar)
library(dplyr)

```

```{r}
#| echo: false


# cargando la base de datos
bd <- read_excel("BDD.Análisis_PD-L1_26-09-2024.xlsx", sheet = "BD_330")

# limpiando los nombres de las variables

bd <- clean_names(bd)

bd <- bd[,-1]
```



```{r}
#| label: tbl-fal
#| echo: false
#| tbl-cap: Valores faltantes para cada variable
apply(is.na(bd), 2, sum) |> kable(col.names = c("Variables",
                                                 "Valores faltantes"),
                                   align = c('c'))
```




De la @tbl-fal podemos concluir que:

**Variables sin valores faltantes**

Muchas variables clave no tienen datos faltantes, lo que indica una base de datos bien estructurada en su mayoría. Ejemplos:

- `estado_vital_5anos`
- `estado_vital_2`
- `tiempo_evento_bx_5anos`
- `edad`, `ciudad`, `afiliacion`, `fecha_dx`, `tiempo_supervivencia_dias`, etc.

**Variables con algunos valores faltantes**

Algunas variables presentan valores faltantes moderados (menores a 20 casos), lo que puede impactar el análisis dependiendo de la variable. Ejemplos:

- `grado_histologico` (31 valores faltantes)
- `t` (15), `n` (16), `m` (9)
- `estadio` (15), `er` (10), `pr` (11), `her2` (13)
- `subtipo_molecular_definitivo` (10)

**Variables con muchos valores faltantes**

Algunas variables tienen un número considerable de datos faltantes, lo que puede representar un problema para el análisis. Ejemplos:

- `recaidas` (131 valores faltantes)
- `pd_l1` (191)
- `area_ocupada_por_los_ti_ls_estromales_percent_total` (139)





```{r}
#| echo: false

# convirtiendo variables tipo factor
# bd$codigo <- as.factor(bd$codigo)
# bd$estado_vital_5años <- as.factor(bd$estado_vital_5anos)
bd$estado_vital_2 <- as.factor(bd$estado_vital_2)
bd$ciudad <- as.factor(bd$ciudad)
bd$edad_cat <- as.factor(bd$edad_cat)
bd$edad_cat2 <- as.factor(bd$edad_cat2)
bd$estrato <- as.factor(bd$estrato)
bd$estrato_cat <- as.factor(bd$estrato_cat)
bd$educacion <- as.factor(bd$educacion)
bd$educacion_cat <- as.factor(bd$educacion_cat)
bd$afiliacion <- as.factor(bd$afiliacion)
bd$lateralidad_cat <- as.factor(bd$lateralidad_cat)
bd$tipo_histologico <- as.factor(bd$tipo_histologico)
bd$tipo_histol_cat <- as.factor(bd$tipo_histol_cat)
bd$grado_histologico <- as.factor(bd$grado_histologico)
bd$grado_nuclear <- as.factor(bd$grado_nuclear)
bd$gh_gn <- as.factor(bd$gh_gn)
bd$t <- as.factor(bd$t)
bd$n <- as.factor(bd$n)
bd$m <- as.factor(bd$m)
bd$estadio <- as.factor(bd$estadio)
bd$estadio_cat <- as.factor(bd$estadio_cat)
bd$estadio_cat3 <- as.factor(bd$estadio_cat3)
bd$estadio_early_late <- as.factor(bd$estadio_early_late)
bd$er <- as.factor(bd$er)
bd$pr <- as.factor(bd$pr)
bd$her2 <- as.factor(bd$her2)
bd$subtipo_molecular_definitivo <- as.factor(bd$subtipo_molecular_definitivo)
bd$eur_cat <- as.factor(bd$eur_cat)
bd$nam_cat <- as.factor(bd$nam_cat)
bd$afr_cat <- as.factor(bd$afr_cat)
bd$recaidas <- as.factor(bd$recaidas)
bd$ano_dx <- as.factor(bd$ano_dx)
bd$cuartil_fecha_dx <- as.factor(bd$cuartil_fecha_dx)
bd$pd_l1 <- as.factor(bd$pd_l1)
bd$interaccion_reg_stage <- as.factor(bd$interaccion_reg_stage)
```

```{r}
#| include: false
#| echo: false

Datos <- read_excel("BDD.Análisis_PD-L1_26-09-2024.xlsx",sheet = "BD_330")

Datos$codigo <- as.factor(Datos$codigo)
Datos$estado_vital_5años <- as.factor(Datos$estado_vital_5años)
Datos$estado_vital_2 <- as.factor(Datos$estado_vital_2)
Datos$ciudad <- as.factor(Datos$ciudad)
Datos$edad_cat <- as.factor(Datos$edad_cat)
Datos$`edad-cat2` <- as.factor(Datos$`edad-cat2`)
Datos$estrato <- as.factor(Datos$estrato)
Datos$estrato_cat <- as.factor(Datos$estrato_cat)
Datos$educacion <- as.factor(Datos$educacion)
Datos$educacion_cat <- as.factor(Datos$educacion_cat)
Datos$afiliacion <- as.factor(Datos$afiliacion)
Datos$lateralidad_cat <- as.factor(Datos$lateralidad_cat)
Datos$tipo_histologico <- as.factor(Datos$tipo_histologico)
Datos$tipo_histol_cat <- as.factor(Datos$tipo_histol_cat)
Datos$grado_histologico <- as.factor(Datos$grado_histologico)
Datos$grado_nuclear <- as.factor(Datos$grado_nuclear)
Datos$`gh/gn` <- as.factor(Datos$`gh/gn`)
Datos$T <- as.factor(Datos$T)
Datos$N <- as.factor(Datos$N)
Datos$M <- as.factor(Datos$M)
Datos$estadio <- as.factor(Datos$estadio)
Datos$estadio_cat <- as.factor(Datos$estadio_cat)
Datos$estadio_cat3 <- as.factor(Datos$estadio_cat3)
Datos$`estadio-Early_late` <- as.factor(Datos$`estadio-Early_late`)
Datos$ER <- as.factor(Datos$ER)
Datos$PR <- as.factor(Datos$PR)
Datos$HER2 <- as.factor(Datos$HER2)
Datos$subtipo_molecular_definitivo <- as.factor(Datos$subtipo_molecular_definitivo)
Datos$EUR_cat <- as.factor(Datos$EUR_cat)
Datos$NAM_cat <- as.factor(Datos$NAM_cat)
Datos$AFR_cat <- as.factor(Datos$AFR_cat)
Datos$recaidas <- as.factor(Datos$recaidas)
Datos$`Año dx` <- as.factor(Datos$`Año dx`)
Datos$`Cuartil_fecha dx` <- as.factor(Datos$`Cuartil_fecha dx`)
Datos$`PD-L1` <- as.factor(Datos$`PD-L1`)
Datos$`Interacción_Reg/stage` <- as.factor(Datos$`Interacción_Reg/stage`)
```

# Análisis Descriptivo

## Correlaciones entre las variables

```{r}
#| echo: false
#| fig-align: center
#| fig-height: 6
#| fig-width: 8


# Mirar correlaciones entre las variables

# Función para calcular Cramer's V entre dos variables
cramerV <- function(var1, var2) {
  tabla <- table(var1, var2)
  assocstats(tabla)$cramer
}

Datos1 <- Datos %>% select_if(is.factor) %>% select(-c('PD-L1','codigo'))

# Función para crear una matriz de Cramer's V
cramerV_matrix <- function(data) {
  n <- ncol(data)
  mat <- matrix(NA, n, n)
  colnames(mat) <- rownames(mat) <- colnames(data)
  for (i in 1:n) {
    for (j in 1:n) {
      if(i==j){
        mat[i,j] <- 1
      }else if (is.nan(cramerV(data[[i]],data[[j]]))) {
        mat[i,j] <-- 0
      }else{
        mat[i, j] <- cramerV(data[[i]], data[[j]])
      }
    }
  }
  return(mat)
}

corrplot(cramerV_matrix(Datos1),method = "circle",type = "upper")
```

\newpage

## Análisis descriptivos de variables individuales

```{r}
#| echo: false
#| warning: false
#| fig-align: center
#| layout-ncol: 4
#| layout-nrow: 5
#| fig-height: 3

# Análisis descriptivos de las variables mas relevantes con la respuesta

variables <- c('estado_vital_5años','estado_vital_2','ciudad','estrato','T','afiliacion','tipo_histologico','T','N','M','estadio','estadio_cat','estadio_cat3',
               'estadio-Early_late','ER','PR','subtipo_molecular_definitivo','EUR_cat','NAM_cat','AFR_cat','recaidas',
               'Interacción_Reg/stage')

# variables individuales

# Bucle para crear un gráfico de barras por variable
for (var in variables) {
  Datos1[[var]] %>% table() %>% barplot(xlab = 'Categorias',main = paste("Grafico de barras de",var),
                                        col = brewer.pal(n = nlevels(Datos1[[var]]), name = "Blues"))
}
```

\newpage

## Análisis descriptivo de variables en conjunto con la respuesta 

```{r}
#| echo: false
#| fig-aling: center
#| layout-ncol: 4
#| layout-nrow: 5

# Análisis descriptivo de vvaraibles en conjunto

for (i in 1:(length(variables)-1)){
  plot(Datos1[[i+1]],Datos1$estado_vital_5años,xlab=variables[i+1],ylab='estado_vital_5años',
       col=c("#99cc99", "#cc9999", "#9999cc"),main= paste("Mosaico variable estado_vital_5_años y ",
                                                          variables[i+1]))
 }
```

\newpage

# Análisis de Supervivencia

Para las curvas de supervivencia utilizaremos el estimador de Kaplan-Meier.

## Estimador de Kaplan-Meier.

```{r}
#| echo: false
bd |> select(estado_vital_5anos, tiempo_supervivencia_dias) |> head() |>
  kable(align = c('cc'))
```

```{r}
#| include: false
cancer_km <- survfit(Surv(tiempo_supervivencia_dias,
                          estado_vital_5anos) ~ 1, 
                     data = bd, 
                     type = "kaplan-meier")


cancer_km |> summary()
```

```{r}
#| echo: false
#| message: false
#| warning: false
ggsurvplot(fit = cancer_km, data = bd, 
           conf.int = T, 
           title = "Curva de Supervivencia", 
           xlab = "Tiempo (dias)", 
           ylab = "Probabilidad de supervivencia", 
           legend.title = "Estimación", 
           legend.labs = "Kaplan-Meier",
           ggtheme = theme_minimal())
```

```{r}
#| include: false
cancer.km <- survfit(Surv(tiempo_supervivencia_dias,
                          estado_vital_5anos) ~ ciudad, 
                     data = bd, 
                     type = "kaplan-meier")

cancer.km |> summary()
```

```{r}
#| echo: false
#| message: false
#| warning: false
ggsurvplot(fit = cancer.km, data = bd, conf.int = T, 
           title = "Curva de Supervivencia por Ciudad", 
           xlab = "Tiempo (dias)", 
           ylab = "Probabilidad de supervivencia",
           palette = "ciudad",
           legend.title = "Estimación",
           legend.labs = c("Medellin", "Barranquilla", "Cali"),
           ggtheme = theme_minimal())

```

```{r}
#| echo: false
survdiff(Surv(tiempo_supervivencia_dias,
              estado_vital_5anos) ~ ciudad,
         data = bd, rho = 0) 
```

## Modelo de Riesgos Proporcionales de Cox

En las situaciones experimentales en las que deseamos estudiar la supervivencia de un conjunto de sujetos en función de un conjunto $X = (X_1, \ldots, X_p)$ de variables predictoras, es decir, variables que pueden afectar o caracterizar su supervivencia, es necesario establecer modelos estadísticos capaces de analizar dichas relaciones. La construcción de este tipo de modelos que depende del tiempo y de las predictoras se hace a través del análisis de la función hazard asociada $h(t; X)$.

El modelo más habitual en esta situación es el **modelo hazard proporcional** que separa en dos componentes la función hazard, una correspondiente al tiempo de supervivencia y otra a las variables predictoras.La finalidad de este modelo es para identificar factores que influyen en la supervivencia.

A manera de ejemplo se ajustara un modelo con algunas variables, las variables a cosiderar al modelo final, y se tranda en cuenta tambien el criterio de Akaike.

```{r}
#| echo: false

modelo <- coxph(Surv(tiempo_supervivencia_dias,estado_vital_5anos==1) ~ ciudad+
                  edad_cat+estrato_cat+educacion_cat+afiliacion, 
              data = bd)
summary(modelo)
```












